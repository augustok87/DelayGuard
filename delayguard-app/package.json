{
  "name": "delayguard",
  "version": "1.0.0",
  "description": "Proactive shipping delay notification app for Shopify merchants",
  "main": "server.js",
  "scripts": {
    "dev": "concurrently \"npm run dev:server:simple\" \"npm run dev:client\"",
    "dev:full": "concurrently \"npm run dev:server\" \"npm run dev:client\"",
    "dev:server": "ts-node src/server.ts",
    "dev:server:simple": "ts-node src/server-simple.ts",
    "dev:client": "webpack serve --mode development",
    "dev:client:optimized": "webpack serve --mode development --config webpack.optimized.config.js",
    "build": "npm run build:client && npm run build:server",
    "build:client": "webpack --mode production",
    "build:client:optimized": "webpack --mode production --config webpack.optimized.config.js",
    "build:analyze": "ANALYZE=true webpack --mode production --config webpack.optimized.config.js",
    "build:server": "tsc --project tsconfig.server.json",
    "start": "node dist/server.js",
    "vercel-build": "tsc --project tsconfig.vercel.json",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "test:integration": "jest --testPathPattern=integration",
    "test:performance": "jest --testPathPattern=performance",
    "lint": "eslint . --ext .js,.ts,.tsx",
    "lint:fix": "node scripts/lint-fix.js",
    "type-check": "tsc --noEmit",
    "db:migrate": "ts-node src/database/migrate.ts",
    "db:migrate:prod": "NODE_ENV=production ts-node src/database/migrate.ts",
    "load-test": "ts-node scripts/load-test.ts",
    "load-test:basic": "ts-node scripts/load-test.ts basic",
    "load-test:webhook": "ts-node scripts/load-test.ts webhook",
    "load-test:stress": "ts-node scripts/load-test.ts stress",
    "deploy": "vercel --prod",
    "deploy:preview": "vercel",
    "docs:generate": "node scripts/generate-docs.js",
    "docs:serve": "http-server docs -p 8080",
    "docs:jsdoc": "jsdoc -c jsdoc.conf.json",
    "docs:typedoc": "typedoc --out docs/typedoc src",
    "docs:api": "swagger-jsdoc -d swagger-config.js src/routes/*.ts -o docs/api/swagger.json",
    "docs:api:serve": "npx swagger-ui-serve docs/api/swagger.json",
    "docs:validate": "node scripts/validate-docs.js",
    "docs:clean": "rm -rf docs/*",
    "quality-gates": "node scripts/quality-gates.js",
    "validate": "node scripts/validate-codebase.js",
    "pre-commit": "npm run quality-gates && npm run validate",
    "test:env": "ts-node -e \"import envValidator from './src/config/environment'; const result = envValidator.validate(); console.log('Environment validation:', result.isValid ? 'PASSED' : 'FAILED'); if (!result.isValid) { console.error('Errors:', result.errors); process.exit(1); }\"",
    "test:db": "ts-node -e \"import { createConnection } from './src/database/connection'; createConnection().then(() => { console.log('Database connection: OK'); process.exit(0); }).catch(e => { console.error('Database connection: FAILED', e.message); process.exit(1); })\"",
    "test:redis": "ts-node -e \"import { createRedisConnection } from './src/services/redis-connection'; createRedisConnection().then(() => { console.log('Redis connection: OK'); process.exit(0); }).catch(e => { console.error('Redis connection: FAILED', e.message); process.exit(1); })\"",
    "lint:progress": "node scripts/lint-progress.js",
    "lint:enhanced": "eslint src --config=.eslintrc.enhanced.js",
    "lint:enhanced:fix": "eslint src --fix --config=.eslintrc.enhanced.js",
    "lint:modern": "eslint src --config=.eslintrc.modern.js",
    "lint:modern:fix": "eslint src --fix --config=.eslintrc.modern.js",
    "lint:improve": "node scripts/lint-improvement.js",
    "lint:final": "node scripts/lint-final-improvement.js",
    "fix:tests": "node scripts/fix-broken-tests.js",
    "fix:tests:comprehensive": "node scripts/comprehensive-test-fix.js",
    "fix:tests:emergency": "node scripts/emergency-test-fix.js",
    "lint:report": "eslint src --format=json --output-file=lint-report.json",
    "lint:ci": "npm run lint:modern && npm run lint:progress"
  },
  "dependencies": {
    "@reduxjs/toolkit": "^2.9.0",
    "@sendgrid/mail": "^8.0.0",
    "@shopify/app-bridge": "^3.7.10",
    "@shopify/app-bridge-react": "^4.2.7",
    "@shopify/koa-shopify-auth": "^4.0.0",
    "@shopify/koa-shopify-graphql-proxy": "^4.0.0",
    "@shopify/shopify-api": "^8.0.0",
    "@tanstack/react-query": "^5.90.2",
    "@types/jsonwebtoken": "^9.0.10",
    "@vercel/node": "^5.3.24",
    "axios": "^1.6.0",
    "bullmq": "^4.0.0",
    "crypto": "^1.0.1",
    "dotenv": "^16.3.0",
    "framer-motion": "^11.18.2",
    "html-escaper": "^3.0.3",
    "ioredis": "^5.0.0",
    "isomorphic-dompurify": "^2.8.0",
    "jsonwebtoken": "^9.0.2",
    "koa": "^2.14.0",
    "koa-bodyparser": "^4.4.0",
    "koa-router": "^12.0.0",
    "koa-session": "^6.0.0",
    "koa-static": "^5.0.0",
    "pg": "^8.11.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-redux": "^9.2.0",
    "redux-persist": "^6.0.0",
    "twilio": "^4.0.0",
    "validator": "^13.11.0",
    "zustand": "^5.0.8"
  },
  "devDependencies": {
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/preset-env": "^7.28.3",
    "@babel/preset-typescript": "^7.27.1",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/auto-instrumentations-node": "^0.65.0",
    "@opentelemetry/exporter-jaeger": "^2.1.0",
    "@opentelemetry/exporter-prometheus": "^0.206.0",
    "@opentelemetry/resources": "^2.1.0",
    "@opentelemetry/sdk-metrics": "^2.1.0",
    "@opentelemetry/sdk-node": "^0.206.0",
    "@opentelemetry/sdk-trace-base": "^2.1.0",
    "@opentelemetry/semantic-conventions": "^1.37.0",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/html-escaper": "^3.0.4",
    "@types/jest": "^29.5.14",
    "@types/jest-axe": "^3.5.9",
    "@types/koa": "^2.13.0",
    "@types/koa-bodyparser": "^4.3.0",
    "@types/koa-router": "^7.4.0",
    "@types/koa-session": "^6.0.0",
    "@types/koa-static": "^4.0.0",
    "@types/node": "^20.0.0",
    "@types/pg": "^8.10.0",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "@types/supertest": "^2.0.16",
    "@types/validator": "^13.15.3",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "autoprefixer": "^10.4.21",
    "clean-webpack-plugin": "^4.0.0",
    "compression-webpack-plugin": "^11.1.0",
    "concurrently": "^8.2.0",
    "css-loader": "^6.8.0",
    "css-minimizer-webpack-plugin": "^7.0.2",
    "eslint": "^8.45.0",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-react": "^7.33.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-perf": "^3.3.3",
    "eslint-plugin-security": "^3.0.1",
    "eslint-plugin-unused-imports": "^4.2.0",
    "glob": "^11.0.3",
    "html-webpack-plugin": "^5.5.0",
    "http-server": "^14.1.1",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.6.0",
    "jest-axe": "^10.0.0",
    "jest-environment-jsdom": "^30.1.2",
    "jest-environment-node": "^30.1.2",
    "jsdoc": "^4.0.2",
    "mini-css-extract-plugin": "^2.9.4",
    "postcss": "^8.5.6",
    "postcss-loader": "^8.2.0",
    "style-loader": "^3.3.0",
    "supertest": "^7.1.4",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0",
    "terser-webpack-plugin": "^5.3.14",
    "ts-jest": "^29.4.4",
    "ts-loader": "^9.4.0",
    "ts-node": "^10.9.0",
    "typedoc": "^0.25.0",
    "typescript": "^5.1.0",
    "webpack": "^5.88.0",
    "webpack-bundle-analyzer": "^4.10.2",
    "webpack-cli": "^5.1.0",
    "webpack-dev-server": "^4.15.0"
  }
}
